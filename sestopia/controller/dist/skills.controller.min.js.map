{"version":3,"sources":["skills.controller.js"],"names":["skillService","require","RESPONSE","router","express","Router","res","then","data","status","SUCCESS","OK","CODE","send","err","get","req","DB_ERR_SKILL_GET","ERROR","MSG","stack","getSkillsByName","query","name","DB_ERR_MEMBER_GET","post","addSkill","body","classification","prerequisites","knowledge_area","rationale","roles_for_skill","related_activities","real_world_scenario","role_of_academia","tools","self_assessment","reference","DB_ERR_MEMBER_ADD","module","exports"],"mappings":"aAAA,IAAIA,aAAeC,QAAQ,2BACvBC,SAAWD,QAAQ,yBADnBD,QAAAA,QAAeC,WAGfE,OAASC,QAAQC,SADrBF,OAAIC,IAAO,IAAGH,SAAAA,EAAQK,GAClBH,aAASC,eAAbG,KAAA,SAAAC,GAEAF,EAAAG,OAAAP,SAAAQ,QAAAC,GAAAC,MAAAC,KAAAL,IAKO,SAACM,GAJDC,EAAIN,OAAKP,SAACc,MAADC,iBAAcL,MAAAC,KAAAX,SAAAgB,MAAAD,iBAAAE,IAAA,KAAAL,EAAAM,WAMzBjB,OAJDY,IAAA,UAAA,SAAAC,EAAAV,GAFJN,aAAAqB,gBAAA,IAAAL,EAAAM,MAAAC,KAAA,KAAAhB,KAAA,SAAAC,GASAF,EAAAG,OAAAP,SAAAQ,QAAAC,GAAAC,MAAAC,KAAAL,IAIO,SAACM,GAHDC,EAAIN,OAAAP,SAAWgB,MAACF,kBAAaJ,MAAAC,KAAAX,SAAAgB,MAAAM,kBAAAL,IAAA,KAAAL,EAAAM,WAK/BjB,OAJDsB,KAAA,YAAA,SAAAT,EAAAV,GADJN,aAAA0B,SAAAV,EAAAW,KAAAJ,KAAAP,EAAAW,KAAAC,eAAAZ,EAAAW,KAAAE,cAAAb,EAAAW,KAAAG,eAAAd,EAAAW,KAAAI,UAAAf,EAAAW,KAAAK,gBAAAhB,EAAAW,KAAAM,mBAAAjB,EAAAW,KAAAO,oBAAAlB,EAAAW,KAAAQ,iBAAAnB,EAAAW,KAAAS,MAAApB,EAAAW,KAAAU,gBAAArB,EAAAW,KAAAW,WAAA/B,KAAA,SAAAC,GAQAF,EAAAG,OAAAP,SAAAQ,QAAAC,GAAAC,MAAAC,KAAAL,IAIO,SAACM,GAHDW,EAAKhB,OAAAP,SAAagB,MAAAqB,kBAAc3B,MAAAC,KAAAX,SAAAgB,MAAAqB,kBAAApB,IAAA,KAAAL,EAAAM,WAKlCoB,OAJDC,QAAAtC","file":"skills.controller.min.js","sourcesContent":["var skillService = require('../service/skillService');\nvar RESPONSE = require('../util/error.handler');\nvar express = require('express');\nvar router = express.Router();\n\n/* GET skills. */\nrouter.get('/', (req, res) => {\n\n    skillService.getAllSkills().then((data) => {\n        res.status(RESPONSE.SUCCESS.OK.CODE).send(data);\n    }, (err) => {\n        res.status(RESPONSE.ERROR.DB_ERR_SKILL_GET.CODE).send(RESPONSE.ERROR.DB_ERR_SKILL_GET.MSG + '\\n' + err.stack);\n    });\n});\n\n/* GET skills by search. */\nrouter.get('/search', (req, res) => {\n    skillService.getSkillsByName('%' + req.query.name + '%').then((data) => {\n        res.status(RESPONSE.SUCCESS.OK.CODE).send(data);\n    }, (err) => {\n        res.status(RESPONSE.ERROR.DB_ERR_MEMBER_GET.CODE).send(RESPONSE.ERROR.DB_ERR_MEMBER_GET.MSG + '\\n' + err.stack);\n    });\n});\n\n/* Add a new skill */\nrouter.post('/addskill', (req, res) => {\n    skillService.addSkill(req.body.name, req.body.classification, req.body.prerequisites, req.body.knowledge_area, req.body.rationale, req.body.roles_for_skill, req.body.related_activities, req.body.real_world_scenario, req.body.role_of_academia, req.body.tools, req.body.self_assessment, req.body.reference).then((data) => {\n        res.status(RESPONSE.SUCCESS.OK.CODE).send(data);\n    }, (err) => {\n        res.status(RESPONSE.ERROR.DB_ERR_MEMBER_ADD.CODE).send(RESPONSE.ERROR.DB_ERR_MEMBER_ADD.MSG + '\\n' + err.stack);\n    });\n});\n\n\nmodule.exports = router;"]}